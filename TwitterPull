package twitterpull;

import java.util.List;
import twitter4j.PagableResponseList;
import twitter4j.Status;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.User;
import twitter4j.conf.ConfigurationBuilder;
import twitter4j.Twitter;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;


/**
 *
 * @author SamMaloney
 */
public class TwitterPull {

    /**
     * @param args the command line arguments
     * @throws twitter4j.TwitterException
     */
    public static void main(String[] args) throws TwitterException, MalformedURLException, IOException {
        ConfigurationBuilder configurationBuilder = new ConfigurationBuilder();
        configurationBuilder.setDebugEnabled(true)
                .setOAuthConsumerKey("consumer key to my twitter")
                .setOAuthConsumerSecret("consumer secret to my twitter")
                .setOAuthAccessToken("access token")
                .setOAuthAccessTokenSecret(" access secret");

        TwitterFactory tf = new TwitterFactory(configurationBuilder.build());
        twitter4j.Twitter tw = tf.getInstance();

        
        Status stat = tw.updateStatus("21");
        System.out.println("Twitter updated");

        URL url = new URL("http://money.cnn.com/data/hotstocks/");

        URLConnection con = url.openConnection();
        InputStream is =con.getInputStream();
BufferedReader br = new BufferedReader(new InputStreamReader(is));

        String line = null;

        // read each line and write to System.out
        while ((line = br.readLine()) != null) {
            System.out.println(line);
        }
        
    }
        
        
    public static void GetUserTimeline(String[] args) {
        // gets Twitter instance with default credentials
        Twitter twitter = new TwitterFactory().getInstance();
        try {
            List<Status> statuses;
            String user;
            if (args.length == 1) {
                user = args[0];
                statuses = twitter.getUserTimeline(user);
            } else {
                user = twitter.verifyCredentials().getScreenName();
                statuses = twitter.getUserTimeline();
            }
            System.out.println("Showing @" + user + "'s user timeline.");
            for (Status status : statuses) {
                System.out.println("@" + status.getUser().getScreenName() + " - " + status.getText());
            }
        } catch (TwitterException te) {
            te.printStackTrace();
            System.out.println("Failed to get timeline: " + te.getMessage());
            System.exit(-1);
        }
    }

    public static void DownloadWebpage(String[] args) throws IOException {

        // Make a URL to the web page
        URL url = new URL("http://stackoverflow.com/questions/6159118/using-java-to-pull-data-from-a-webpage");

        // Get the input stream through URL Connection
        URLConnection con = url.openConnection();
        InputStream is =con.getInputStream();

        // Once you have the Input Stream, it's just plain old Java IO stuff.

        // For this case, since you are interested in getting plain-text web page
        // I'll use a reader and output the text content to System.out.

        // For binary content, it's better to directly read the bytes from stream and write
        // to the target file.


        BufferedReader br = new BufferedReader(new InputStreamReader(is));

        String line = null;

        // read each line and write to System.out
        while ((line = br.readLine()) != null) {
            System.out.println(line);
        }
    }
}
        
        /**
        List<Status> fav = tw.getFavorites();
        for (Status s : fav) {
            System.out.println(s.getUser().getName() + "      " + s.getText());
        }
        
        System.out.println();
        PagableResponseList<User> mentions = tw.getBlocksList();
        for (User s : mentions) {
            System.out.println(s.getUser().getName() + "      " + s.getText());
        }
        
        * */
    

